
2024-10-01 03:10:11.501 asgard_gen/test_229.py::TestPlanEnv_229::test_US_TTP[206451_OnPublishStart - Stream online - No priority parameter 2<3, 2=2 - Overwrite failed - Verify GetRelaySource successful.-req_data36] 2024-10-01 03:10:11,502 INFO - func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7f402f648320>
2024-10-01 03:10:11.502 2024-10-01 03:10:11,503 INFO - func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7f402f648680>
2024-10-01 03:10:11.503 2024-10-01 03:10:11,504 INFO - func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7f402f64e050>
2024-10-01 03:10:11.504 2024-10-01 03:10:11,505 INFO - func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7f402f64e3b0>
2024-10-01 03:10:11.505 2024-10-01 03:10:11,506 INFO - func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7f402f64e710>
2024-10-01 03:10:11.506 2024-10-01 03:10:11,507 INFO - func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7f402f64ea70>
2024-10-01 03:10:11.507 2024-10-01 03:10:11,508 INFO - func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7f402f64edd0>
2024-10-01 03:10:11.508 2024-10-01 03:10:11,508 INFO - func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7f402f637170>
2024-10-01 03:10:11.508 2024-10-01 03:10:11,509 INFO - egress: videoarch.livenet.qa_live_faas-asgard_invoke, body: FuncRequest(FuncID='f1', Func='live-context', Description='ip', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"context": {"ips": ["10.113.249.85", "10.113.249.57", "10.113.249.55", "10.113.109.247", "10.118.175.128"], "source_third": "source-fcdn-sg.s.worldfcdn.com"}, "ctx_cfg": {}}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), RuntCtx=None, Base=Base(LogID='2024100103101101011408406842323', Caller='tesla.us.livenet_qa', Addr='10.114.84.68', Client='', TrafficEnv=None, Extra={'cluster': 'default', 'env': 'prod'}))
2024-10-01 03:10:11.509 2024-10-01 03:10:11,516 INFO - egress: videoarch.livenet.qa_live_faas-asgard_invoke, resp: FuncResponse(Trace=Trace(OK=True, Err='', Extra=''), Data='{"context": {"ips": ["10.113.249.85", "10.113.249.57", "10.113.249.55", "10.113.109.247", "10.118.175.128"], "source_third": "source-fcdn-sg.s.worldfcdn.com"}}', BaseResp=BaseResp(StatusMessage='', StatusCode=0, Extra={'LogID': '2024100103101101011408406842323'}))
2024-10-01 03:10:11.516 2024-10-01 03:10:11,516 INFO - egress: videoarch.livenet.qa_live_faas-asgard_invoke, body: FuncRequest(FuncID='f2', Func='live-get_random', Description='', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"random_schema": "stream-test-${r}", "ctx_cfg": {}}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), RuntCtx=None, Base=Base(LogID='2024100103101101011408406840816', Caller='tesla.us.livenet_qa', Addr='10.114.84.68', Client='', TrafficEnv=None, Extra={'cluster': 'default', 'env': 'prod'}))
2024-10-01 03:10:11.517 2024-10-01 03:10:11,522 INFO - egress: videoarch.livenet.qa_live_faas-asgard_invoke, resp: FuncResponse(Trace=Trace(OK=True, Err='', Extra=''), Data='{"data": "stream-test-7r3mtbprqujjpe2b"}', BaseResp=BaseResp(StatusMessage='', StatusCode=0, Extra={'LogID': '2024100103101101011408406840816'}))
2024-10-01 03:10:11.522 2024-10-01 03:10:11,522 INFO - [get key replace] from_key: f1-vhost, to_key: vhost, to_key_val:
2024-10-01 03:10:11.523 2024-10-01 03:10:11,523 INFO - [get key replace] from_key: f1-app, to_key: app, to_key_val:
2024-10-01 03:10:11.523 2024-10-01 03:10:11,523 ERROR - [ctx_err] curr_step: f3_live-stream_interaction, err: f3 jsonpath error: ['context', 'ips', '0'], has no path context, detail: Traceback (most recent call last):
2024-10-01 03:10:11.523   File "/usr/local/lib/python3.7/site-packages/asgard/light_house/sugar_context.py", line 19, in dict_jsonpath
2024-10-01 03:10:11.523     if isinstance(_resp, dict)
2024-10-01 03:10:11.523 KeyError: 'context'
2024-10-01 03:10:11.523
2024-10-01 03:10:11.523 During handling of the above exception, another exception occurred:
2024-10-01 03:10:11.523
2024-10-01 03:10:11.523 Traceback (most recent call last):
2024-10-01 03:10:11.523   File "/usr/local/lib/python3.7/site-packages/asgard/light_house/magic_pipeline.py", line 155, in runtime
2024-10-01 03:10:11.523     req.Params.ReqDataJson = json.dumps(self.ctx.next_req_params)
2024-10-01 03:10:11.523   File "/usr/local/lib/python3.7/site-packages/asgard/light_house/sugar_context.py", line 167, in next_req_params
2024-10-01 03:10:11.523     self.curr_step, self.resp_map[step[1:]], from_key.split("-")[1:]
2024-10-01 03:10:11.523   File "/usr/local/lib/python3.7/site-packages/asgard/light_house/sugar_context.py", line 25, in dict_jsonpath
2024-10-01 03:10:11.523     raise Exception(f"{curr_step} jsonpath error: {ab_path}, has no path {key}")
2024-10-01 03:10:11.523 Exception: f3 jsonpath error: ['context', 'ips', '0'], has no path context
2024-10-01 03:10:11.523
2024-10-01 03:10:11.523 2024-10-01 03:10:11,524 INFO - [runtime err] [[ctx_err] curr_step: f3_live-stream_interaction, err: f3 jsonpath error: ['context', 'ips', '0'], has no path context]
2024-10-01 03:10:11.524 2024-10-01 03:10:11,524 INFO - [中间态 req] {'f1': FuncRequest(FuncID='f1', Func='live-context', Description='ip', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"context": {"ips": ["10.113.249.85", "10.113.249.57", "10.113.249.55", "10.113.109.247", "10.118.175.128"], "source_third": "source-fcdn-sg.s.worldfcdn.com"}, "ctx_cfg": {}}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), Before=None, After=None, Base=None), 'f2': FuncRequest(FuncID='f2', Func='live-get_random', Description='', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"random_schema": "stream-test-${r}", "ctx_cfg": {}}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), Before=None, After=None, Base=None), 'f3': FuncRequest(FuncID='f3', Func='live-stream_interaction', Description='push stream with pri=2 and pri=3', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"ctx_cfg": {}, "cmd_parallel": false, "cmd_async": true, "cmd_client": "nss_bench", "cmd": " --vvv push --flv /opt/tiger/ftest_lowcode_core/media_cache/h264_50x50.flv --url \'rtmp://${ip}:1935/${app}/${stream}?vhost=${vhost}&internal=true&pri=2\' --type rtmp --duration 60", "cmd_timeout": "", "mode": "local", "cmd_list": []}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), Before=None, After=None, Base=None)}
2024-10-01 03:10:11.524 2024-10-01 03:10:11,524 INFO - [中间态 resp] {'f1': {'context': {'ips': ['10.113.249.85', '10.113.249.57', '10.113.249.55', '10.113.109.247', '10.118.175.128'], 'source_third': 'source-fcdn-sg.s.worldfcdn.com'}}, 'f2': {'data': 'stream-test-7r3mtbprqujjpe2b'}, 'f3': None}
2024-10-01 03:10:11.524 2024-10-01 03:10:11,526 ERROR - [[ctx_err] curr_step: f3_live-stream_interaction, err: f3 jsonpath error: ['context', 'ips', '0'], has no path context]
2024-10-01 03:10:11.526
2024-10-01 03:10:11.597 [gw7] FAILED asgard_gen/test_229.py::TestPlanEnv_229::test_US_TTP[206451_OnPublishStart - Stream online - No priority parameter 2<3, 2=2 - Overwrite failed - Verify GetRelaySource successful.-req_data36]

2024-10-01 03:10:11.600 asgard_gen/test_229.py::TestPlanEnv_229::test_US_TTP[206451_OnPublishStart - Stream online - No priority parameter 2<3, 2=2 - Overwrite failed - Verify GetRelaySource successful.-req_data37] 2024-10-01 03:10:11,604 INFO - func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7f402f60bb90>
2024-10-01 03:10:11.605 2024-10-01 03:10:11,605 INFO - func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7f402f8390e0>
2024-10-01 03:10:11.605 2024-10-01 03:10:11,606 INFO - func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7f402f839440>
2024-10-01 03:10:11.606 2024-10-01 03:10:11,607 INFO - func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7f402f8397a0>
2024-10-01 03:10:11.607 2024-10-01 03:10:11,607 INFO - func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7f402f839b00>
2024-10-01 03:10:11.608 2024-10-01 03:10:11,608 INFO - func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7f402f839e60>
2024-10-01 03:10:11.608 2024-10-01 03:10:11,609 INFO - func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7f402f871200>
2024-10-01 03:10:11.609 2024-10-01 03:10:11,609 INFO - func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7f402f871560>
2024-10-01 03:10:11.609 2024-10-01 03:10:11,610 INFO - egress: videoarch.livenet.qa_live_faas-asgard_invoke, body: FuncRequest(FuncID='f1', Func='live-context', Description='ip', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"context": {"ips": ["10.113.249.85", "10.113.249.57", "10.113.249.55", "10.113.109.247", "10.118.175.128"], "source_third": "source-fcdn-sg.s.worldfcdn.com"}, "ctx_cfg": {}}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), RuntCtx=None, Base=Base(LogID='2024100103101101011408406899663', Caller='tesla.us.livenet_qa', Addr='10.114.84.68', Client='', TrafficEnv=None, Extra={'cluster': 'default', 'env': 'prod'}))
2024-10-01 03:10:11.610 2024-10-01 03:10:11,619 INFO - egress: videoarch.livenet.qa_live_faas-asgard_invoke, resp: FuncResponse(Trace=Trace(OK=True, Err='', Extra=''), Data='{"context": {"ips": ["10.113.249.85", "10.113.249.57", "10.113.249.55", "10.113.109.247", "10.118.175.128"], "source_third": "source-fcdn-sg.s.worldfcdn.com"}}', BaseResp=BaseResp(StatusMessage='', StatusCode=0, Extra={'LogID': '2024100103101101011408406899663'}))
2024-10-01 03:10:11.619 2024-10-01 03:10:11,619 INFO - egress: videoarch.livenet.qa_live_faas-asgard_invoke, body: FuncRequest(FuncID='f2', Func='live-get_random', Description='', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"random_schema": "stream-test-${r}", "ctx_cfg": {}}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), RuntCtx=None, Base=Base(LogID='2024100103101101011408406824650', Caller='tesla.us.livenet_qa', Addr='10.114.84.68', Client='', TrafficEnv=None, Extra={'cluster': 'default', 'env': 'prod'}))
2024-10-01 03:10:11.619 2024-10-01 03:10:11,625 INFO - egress: videoarch.livenet.qa_live_faas-asgard_invoke, resp: FuncResponse(Trace=Trace(OK=True, Err='', Extra=''), Data='{"data": "stream-test-xllccn45fkxt81yp"}', BaseResp=BaseResp(StatusMessage='', StatusCode=0, Extra={'LogID': '2024100103101101011408406824650'}))
2024-10-01 03:10:11.625 2024-10-01 03:10:11,626 INFO - [get key replace] from_key: f1-vhost, to_key: vhost, to_key_val:
2024-10-01 03:10:11.626 2024-10-01 03:10:11,626 INFO - [get key replace] from_key: f1-app, to_key: app, to_key_val:
2024-10-01 03:10:11.626 2024-10-01 03:10:11,626 ERROR - [ctx_err] curr_step: f3_live-stream_interaction, err: f3 jsonpath error: ['context', 'ips', '0'], has no path context, detail: Traceback (most recent call last):
2024-10-01 03:10:11.626   File "/usr/local/lib/python3.7/site-packages/asgard/light_house/sugar_context.py", line 19, in dict_jsonpath
2024-10-01 03:10:11.626     if isinstance(_resp, dict)
2024-10-01 03:10:11.626 KeyError: 'context'
2024-10-01 03:10:11.626
2024-10-01 03:10:11.626 During handling of the above exception, another exception occurred:
2024-10-01 03:10:11.626
2024-10-01 03:10:11.626 Traceback (most recent call last):
2024-10-01 03:10:11.626   File "/usr/local/lib/python3.7/site-packages/asgard/light_house/magic_pipeline.py", line 155, in runtime
2024-10-01 03:10:11.626     req.Params.ReqDataJson = json.dumps(self.ctx.next_req_params)
2024-10-01 03:10:11.626   File "/usr/local/lib/python3.7/site-packages/asgard/light_house/sugar_context.py", line 167, in next_req_params
2024-10-01 03:10:11.626     self.curr_step, self.resp_map[step[1:]], from_key.split("-")[1:]
2024-10-01 03:10:11.626   File "/usr/local/lib/python3.7/site-packages/asgard/light_house/sugar_context.py", line 25, in dict_jsonpath
2024-10-01 03:10:11.626     raise Exception(f"{curr_step} jsonpath error: {ab_path}, has no path {key}")
2024-10-01 03:10:11.626 Exception: f3 jsonpath error: ['context', 'ips', '0'], has no path context
2024-10-01 03:10:11.626
2024-10-01 03:10:11.626 2024-10-01 03:10:11,627 INFO - [runtime err] [[ctx_err] curr_step: f3_live-stream_interaction, err: f3 jsonpath error: ['context', 'ips', '0'], has no path context]
2024-10-01 03:10:11.627 2024-10-01 03:10:11,627 INFO - [中间态 req] {'f1': FuncRequest(FuncID='f1', Func='live-context', Description='ip', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"context": {"ips": ["10.113.249.85", "10.113.249.57", "10.113.249.55", "10.113.109.247", "10.118.175.128"], "source_third": "source-fcdn-sg.s.worldfcdn.com"}, "ctx_cfg": {}}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), Before=None, After=None, Base=None), 'f2': FuncRequest(FuncID='f2', Func='live-get_random', Description='', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"random_schema": "stream-test-${r}", "ctx_cfg": {}}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), Before=None, After=None, Base=None), 'f3': FuncRequest(FuncID='f3', Func='live-stream_interaction', Description='push stream with pri=2 and pri=3', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"ctx_cfg": {}, "cmd_parallel": false, "cmd_async": true, "cmd_client": "nss_bench", "cmd": " --vvv push --flv /opt/tiger/ftest_lowcode_core/media_cache/h264_50x50.flv --url \'rtmp://${ip}:1935/${app}/${stream}?vhost=${vhost}&internal=true&pri=3\' --type rtmp --duration 60", "cmd_timeout": "", "mode": "local", "cmd_list": []}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), Before=None, After=None, Base=None)}
2024-10-01 03:10:11.627 2024-10-01 03:10:11,627 INFO - [中间态 resp] {'f1': {'context': {'ips': ['10.113.249.85', '10.113.249.57', '10.113.249.55', '10.113.109.247', '10.118.175.128'], 'source_third': 'source-fcdn-sg.s.worldfcdn.com'}}, 'f2': {'data': 'stream-test-xllccn45fkxt81yp'}, 'f3': None}
2024-10-01 03:10:11.627 2024-10-01 03:10:11,629 ERROR - [[ctx_err] curr_step: f3_live-stream_interaction, err: f3 jsonpath error: ['context', 'ips', '0'], has no path context]
2024-10-01 03:10:11.629
2024-10-01 03:10:11.639 [gw7] FAILED asgard_gen/test_229.py::TestPlanEnv_229::test_US_TTP[206451_OnPublishStart - Stream online - No priority parameter 2<3, 2=2 - Overwrite failed - Verify GetRelaySource successful.-req_data37]

2024-1

2024-10-01 03:10:17.212 2024-10-01 03:10:17,212 INFO - [get key replace] from_key: f9-code, to_key: code, to_key_val: 404
2024-10-01 03:10:17.212 2024-10-01 03:10:17,213 INFO - egress: videoarch.livenet.qa_live_faas-asgard_invoke, body: FuncRequest(FuncID='f10', Func='live-assert', Description='', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"assert_schemas": {"${code}": ["=", 0]}, "ctx_cfg": {}, "code": 404}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), RuntCtx=None, Base=Base(LogID='2024100103100601011408406865995', Caller='tesla.us.livenet_qa', Addr='10.114.84.68', Client='', TrafficEnv=None, Extra={'cluster': 'default', 'env': 'prod'}))
2024-10-01 03:10:17.213 2024-10-01 03:10:17,220 INFO - egress: videoarch.livenet.qa_live_faas-asgard_invoke, resp: FuncResponse(Trace=Trace(OK=False, Err='assert failed', Extra=''), Data='{"result": false, "logs": ["[assert] false: <404> should be = <0>"]}', BaseResp=BaseResp(StatusMessage='', StatusCode=0, Extra={'LogID': '2024100103100601011408406865995'}))
2024-10-01 03:10:17.221 2024-10-01 03:10:17,222 ERROR - [runtime_err] curr_step: f10_live-assert, err: assert failed, detail: Traceback (most recent call last):
2024-10-01 03:10:17.222   File "/usr/local/lib/python3.7/site-packages/asgard/light_house/magic_pipeline.py", line 163, in runtime
2024-10-01 03:10:17.222     _resp = biforst(func, req)
2024-10-01 03:10:17.222   File "/usr/local/lib/python3.7/site-packages/asgard/light_house/magic_rpc.py", line 42, in biforst
2024-10-01 03:10:17.222     raise RuntimeError(resp.Trace.Err)
2024-10-01 03:10:17.222 RuntimeError: assert failed
2024-10-01 03:10:17.222
2024-10-01 03:10:17.222 2024-10-01 03:10:17,222 INFO - [runtime err] [[runtime_err] curr_step: f10_live-assert, err: assert failed]
2024-10-01 03:10:17.222 2024-10-01 03:10:17,223 INFO - [中间态 req] {'f1': FuncRequest(FuncID='f1', Func='live-context', Description='VAS', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"context": {"vhost": "push-test-tt01.videoarchserverqa.xyz", "app": "live-trans"}, "ctx_cfg": {}}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), Before=None, After=None, Base=None), 'f2': FuncRequest(FuncID='f2', Func='live-context', Description='pod ip', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"context": {"ips": ["10.113.249.85", "10.113.249.57", "10.113.249.55", "10.113.109.247", "10.118.175.128"], "source_third": "source-fcdn-sg.s.worldfcdn.com"}, "ctx_cfg": {}}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), Before=None, After=None, Base=None), 'f3': FuncRequest(FuncID='f3', Func='live-get_random', Description='', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"random_schema": "stream-test-${r}", "ctx_cfg": {}}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), Before=None, After=None, Base=None), 'f4': FuncRequest(FuncID='f4', Func='live-context', Description='get stream_md', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"context": "${stream}_md", "ctx_cfg": {}, "stream": "stream-test-tm3ldcwoi8cdy1lp"}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), Before=None, After=None, Base=None), 'f5': FuncRequest(FuncID='f5', Func='live-stream_interaction', Description='push stream', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"ctx_cfg": {}, "cmd_parallel": false, "cmd_async": true, "cmd_client": "nss_bench", "cmd": " --vvv push --flv /opt/tiger/ftest_lowcode_core/media_cache/mot_h264.flv --url \'rtmp://${ip}:1935/${app}/${stream}?vhost=${vhost}&internal=true\' --type rtmp --duration 60", "cmd_timeout": "", "mode": "local", "cmd_list": [], "stream": "stream-test-tm3ldcwoi8cdy1lp", "app": "live-trans", "vhost": "push-test-tt01.videoarchserverqa.xyz", "ip": "10.113.249.85"}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), Before=None, After=None, Base=None), 'f6': FuncRequest(FuncID='f6', Func='live-assert', Description='', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"assert_schemas": {"${code}": ["=", 0]}, "ctx_cfg": {}, "code": 0}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), Before=None, After=None, Base=None), 'f7': FuncRequest(FuncID='f7', Func='live-get_time', Description='', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"time_schema": "timestamp_ms", "ctx_cfg": {}, "shift": ""}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), Before=None, After=None, Base=None), 'f8': FuncRequest(FuncID='f8', Func='live-http', Description='first hook on play start trigger transcoding task', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"http_retry_times": 0, "http_retry_interval_seconds": 0, "ctx_cfg": {}, "http_schema": "http", "http_method": "POST", "http_host": "nss-dispatch-tt01.tiktokd.org", "http_port": null, "http_path": "/api/v4/on_play_start", "http_url": "", "http_params": {}, "http_body": {"timestamp_ms": "${timestamp_ms}", "client_id": "1731592288", "server_ip": "${ip}", "server_port": 1935, "host_ip": "${ip}", "host_ipv6": "", "host_pod": "${pod}", "client_ip": "${ip}", "vhost": "${vhost}", "domain": "${vhost}", "app": "${app}", "stream": "${stream_name}", "params": "", "url_type": "", "stream_group": null, "metadata": {"script_info": "{}"}, "is_norm_source": false, "norm_sink_sess_count": 0, "trans_info": null, "media_type": "", "re_hook_params": "", "force_sync": false, "stream_key": "${vhost}:${app}:${stream_name}"}, "http_headers": {"x-tt-env": "canary"}, "json_resp": true, "expect_status": null, "consul_cfg": {}, "stream_name": "stream-test-tm3ldcwoi8cdy1lp_md", "timestamp_ms": 1727752207103, "app": "live-trans", "ip": "10.113.249.85", "vhost": "push-test-tt01.videoarchserverqa.xyz"}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), Before=None, After=None, Base=None), 'f9': FuncRequest(FuncID='f9', Func='live-http', Description='hook on play start with transcode stream', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"http_retry_times": 0, "http_retry_interval_seconds": 0, "ctx_cfg": {"delay": 10}, "http_schema": "http", "http_method": "POST", "http_host": "nss-dispatch-tt01.tiktokd.org", "http_port": null, "http_path": "/api/v4/on_play_start", "http_url": "", "http_params": {}, "http_body": {"timestamp_ms": "${timestamp_ms}", "client_id": "1731592288", "server_ip": "${ip}", "server_port": 1935, "host_ip": "${ip}", "host_ipv6": "", "host_pod": "${pod}", "client_ip": "${ip}", "vhost": "${vhost}", "domain": "${vhost}", "app": "${app}", "stream": "${stream_name}", "params": "", "url_type": "", "stream_group": null, "metadata": {"script_info": "{}"}, "is_norm_source": false, "norm_sink_sess_count": 0, "trans_info": null, "media_type": "", "re_hook_params": "", "force_sync": false, "stream_key": "${vhost}:${app}:${stream_name}"}, "http_headers": {"x-tt-env": "canary"}, "json_resp": true, "expect_status": null, "consul_cfg": {}, "stream_name": "stream-test-tm3ldcwoi8cdy1lp_md", "timestamp_ms": 1727752207103, "app": "live-trans", "ip": "10.113.249.57", "vhost": "push-test-tt01.videoarchserverqa.xyz"}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), Before=None, After=None, Base=None), 'f10': FuncRequest(FuncID='f10', Func='live-assert', Description='', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"assert_schemas": {"${code}": ["=", 0]}, "ctx_cfg": {}, "code": 404}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), Before=None, After=None, Base=None)}
2024-10-01 03:10:17.223 2024-10-01 03:10:17,223 INFO - [中间态 resp] {'f1': {'context': {'vhost': 'push-test-tt01.videoarchserverqa.xyz', 'app': 'live-trans'}}, 'f2': {'context': {'ips': ['10.113.249.85', '10.113.249.57', '10.113.249.55', '10.113.109.247', '10.118.175.128'], 'source_third': 'source-fcdn-sg.s.worldfcdn.com'}}, 'f3': {'data': 'stream-test-tm3ldcwoi8cdy1lp'}, 'f4': {'context': 'stream-test-tm3ldcwoi8cdy1lp_md'}, 'f5': {'code': 0, 'msg': 'nil return for async call', 'outputs': [], 'extra': {'log_id': '20241001031005D76BDEE61A2B83B00889', 'idc': 'useast5', 'host': '10.114.86.216'}, 'cmd': " --vvv push --flv /opt/tiger/ftest_lowcode_core/media_cache/mot_h264.flv --url 'rtmp://10.113.249.85:1935/live-trans/stream-test-tm3ldcwoi8cdy1lp?vhost=push-test-tt01.videoarchserverqa.xyz&internal=true' --type rtmp --duration 60"}, 'f6': {'result': True, 'logs': ['[assert] true: <0> should be = <0>']}, 'f7': {'data': 1727752207103}, 'f8': {'status_code': 200, 'headers': {'Date': 'Tue, 01 Oct 2024 03:10:07 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '99', 'Connection': 'keep-alive', 'X-Tt-Logid': '2024100103100603019883C8E351867601', 'server-timing': 'inner; dur=13', 'x-tt-trace-host': '017d533c2559d9b663bdb998e00c2e1409e3acbdb9c67678be68379a5e8aafe398d1c02f798f9ed54dfb254a37d000890301493c659e6d5b655af6698dc0a976f8', 'x-tt-trace-tag': 'id=00;cdn-cache=miss', 'x-tt-trace-id': '00-24100103100603019883C8E351867601-4A36EE4F675C65DB-00', 'Server': 'TLB'}, 'content': {'version': '1.0.1', 'code': 404, 'msg': 'StatusNotFound', 'log_id': '2024100103100603019883C8E351867601'}, 'curl': 'curl -X POST -H \'Accept: */*\' -H \'Accept-Encoding: gzip, deflate\' -H \'Connection: keep-alive\' -H \'Content-Length: 688\' -H \'Content-Type: application/json\' -H \'User-Agent: python-requests/2.32.3\' -H \'x-tt-env: canary\' -d \'{"timestamp_ms": 1727752207103, "client_id": "1731592288", "server_ip": "10.113.249.85", "server_port": 1935, "host_ip": "10.113.249.85", "host_ipv6": "", "host_pod": "${pod}", "client_ip": "10.113.249.85", "vhost": "push-test-tt01.videoarchserverqa.xyz", "domain": "push-test-tt01.videoarchserverqa.xyz", "app": "live-trans", "stream": "stream-test-tm3ldcwoi8cdy1lp_md", "params": "", "url_type": "", "stream_group": null, "metadata": {"script_info": "{}"}, "is_norm_source": false, "norm_sink_sess_count": 0, "trans_info": null, "media_type": "", "re_hook_params": "", "force_sync": false, "stream_key": "push-test-tt01.videoarchserverqa.xyz:live-trans:stream-test-tm3ldcwoi8cdy1lp_md"}\' http://nss-dispatch-tt01.tiktokd.org/api/v4/on_play_start'}, 'f9': {'status_code': 200, 'headers': {'Date': 'Tue, 01 Oct 2024 03:10:17 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '99', 'Connection': 'keep-alive', 'X-Tt-Logid': '20241001031016BADBD7FF6CA7B1805F30', 'server-timing': 'inner; dur=21', 'x-tt-trace-host': '017d533c2559d9b663bdb998e00c2e1409e1f9fc5e9bee731242067e030c7b3fe0479ef63b397dc8aa9cd361c72e04c7d02b71c65311974ee29ee83d90478ddf80', 'x-tt-trace-tag': 'id=00;cdn-cache=miss', 'x-tt-trace-id': '00-241001031016BADBD7FF6CA7B1805F30-18C78B7680E955B9-00', 'Server': 'TLB'}, 'content': {'version': '1.0.1', 'code': 404, 'msg': 'StatusNotFound', 'log_id': '20241001031016BADBD7FF6CA7B1805F30'}, 'curl': 'curl -X POST -H \'Accept: */*\' -H \'Accept-Encoding: gzip, deflate\' -H \'Connection: keep-alive\' -H \'Content-Length: 688\' -H \'Content-Type: application/json\' -H \'User-Agent: python-requests/2.32.3\' -H \'x-tt-env: canary\' -d \'{"timestamp_ms": 1727752207103, "client_id": "1731592288", "server_ip": "10.113.249.57", "server_port": 1935, "host_ip": "10.113.249.57", "host_ipv6": "", "host_pod": "${pod}", "client_ip": "10.113.249.57", "vhost": "push-test-tt01.videoarchserverqa.xyz", "domain": "push-test-tt01.videoarchserverqa.xyz", "app": "live-trans", "stream": "stream-test-tm3ldcwoi8cdy1lp_md", "params": "", "url_type": "", "stream_group": null, "metadata": {"script_info": "{}"}, "is_norm_source": false, "norm_sink_sess_count": 0, "trans_info": null, "media_type": "", "re_hook_params": "", "force_sync": false, "stream_key": "push-test-tt01.videoarchserverqa.xyz:live-trans:stream-test-tm3ldcwoi8cdy1lp_md"}\' http://nss-dispatch-tt01.tiktokd.org/api/v4/on_play_start'}, 'f10': None}
2024-10-01 03:10:17.223 2024-10-01 03:10:17,230 ERROR - [[runtime_err] curr_step: f10_live-assert, err: assert failed]
2024-10-01 03:10:17.230
2024-10-01 03:10:17.281 [gw9] FAILED asgard_gen/test_229.py::TestPlanEnv_229::test_US_TTP[206114_OnPlayStart - Transcoded stream - First pull triggers transcoding - Subsequent pull - Returns success with correct address.-req_data18]

2024-10-01 03:11:26.211
2024-10-01 03:11:26.211 =================================== FAILURES ===================================
2024-10-01 03:11:26.211 _ TestPlanEnv_229.test_US_TTP[206451_OnPublishStart - Stream online - No priority parameter 2<3, 2=2 - Overwrite failed - Verify GetRelaySource successful.-req_data36] _
2024-10-01 03:11:26.211 [gw7] linux -- Python 3.7.7 /usr/local/bin/python
2024-10-01 03:11:26.211
2024-10-01 03:11:26.211 self = <test_229.TestPlanEnv_229 object at 0x7f402fd437d0>
2024-10-01 03:11:26.211 description = '206451_OnPublishStart - Stream online - No priority parameter 2<3, 2=2 - Overwrite failed - Verify GetRelaySource successful.'
2024-10-01 03:11:26.211 req_data = MagicPipelineRequest(Description='206451_OnPublishStart - Stream online - No priority parameter 2<3, 2=2 - Overwrite f...son=''), Before=None, After=None, Base=None)], AopFunc=AopFunc(SetUp=[], TearDown=[], RuntEnv={}, RuntCtx={}), Base={})
2024-10-01 03:11:26.211
2024-10-01 03:11:26.211     @allure.title("{description}")
2024-10-01 03:11:26.211     @pytest.mark.parametrize(
2024-10-01 03:11:26.211         "description, req_data",
2024-10-01 03:11:26.211         [
2024-10-01 03:11:26.211             (case.Description, case)
2024-10-01 03:11:26.211             for case in case_info["US-TTP"]
2024-10-01 03:11:26.211         ],
2024-10-01 03:11:26.211     )
2024-10-01 03:11:26.211     def test_US_TTP(self, description, req_data):
2024-10-01 03:11:26.211 >       run_pipeline(req_data)
2024-10-01 03:11:26.211
2024-10-01 03:11:26.211 asgard_gen/test_229.py:24:
2024-10-01 03:11:26.211 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-10-01 03:11:26.211 /usr/local/lib/python3.7/site-packages/asgard/entry.py:75: in run_pipeline
2024-10-01 03:11:26.211     return generate_allure(mix_req_map, step_resp_map, ok, err)
2024-10-01 03:11:26.211 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-10-01 03:11:26.211
2024-10-01 03:11:26.211 req = {'f1': FuncRequest(FuncID='f1', Func='live-context', Description='ip', Params=JsonReqData(IsJsonData=True, ReqData={'r...cmd_list": []}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), Before=None, After=None, Base=None)}
2024-10-01 03:11:26.211 resp = {'f1': {'context': {'ips': ['10.113.249.85', '10.113.249.57', '10.113.249.55', '10.113.109.247', '10.118.175.128'], 'source_third': 'source-fcdn-sg.s.worldfcdn.com'}}, 'f2': {'data': 'stream-test-7r3mtbprqujjpe2b'}, 'f3': None}
2024-10-01 03:11:26.211 ok = False
2024-10-01 03:11:26.211 err = "[[ctx_err] curr_step: f3_live-stream_interaction, err: f3 jsonpath error: ['context', 'ips', '0'], has no path context]"
2024-10-01 03:11:26.211
2024-10-01 03:11:26.211     def generate_allure(
2024-10-01 03:11:26.211         req: Dict[str, FuncRequest], resp: Dict[str, FuncResponse], ok: bool, err: str
2024-10-01 03:11:26.211     ):
2024-10-01 03:11:26.211         for step, step_req in req.items():
2024-10-01 03:11:26.211             step_info = (
2024-10-01 03:11:26.211                 f"{step}. {step_req.Description}"
2024-10-01 03:11:26.211                 if step_req.Description
2024-10-01 03:11:26.211                 else f"{step}. {step_req.Func}"
2024-10-01 03:11:26.211             )
2024-10-01 03:11:26.211             with allure.step(step_info):
2024-10-01 03:11:26.211                 # attach req
2024-10-01 03:11:26.211                 allure.attach(
2024-10-01 03:11:26.211                     pprint.pformat(json.loads(simple_thrift2json(step_req)), depth=10),
2024-10-01 03:11:26.211                     "req",
2024-10-01 03:11:26.211                     allure.attachment_type.JSON,
2024-10-01 03:11:26.211                 )
2024-10-01 03:11:26.211                 # attach resp
2024-10-01 03:11:26.211                 step_resp = resp.get(step, {})
2024-10-01 03:11:26.211                 allure.attach(
2024-10-01 03:11:26.211                     pprint.pformat(json.loads(simple_thrift2json(step_resp)), depth=10),
2024-10-01 03:11:26.211                     "resp",
2024-10-01 03:11:26.211                     allure.attachment_type.JSON,
2024-10-01 03:11:26.211                 )
2024-10-01 03:11:26.211
2024-10-01 03:11:26.211         if not ok:
2024-10-01 03:11:26.211             logging.error(err)
2024-10-01 03:11:26.211 >           raise AssertionError(err)
2024-10-01 03:11:26.211 E           AssertionError: [[ctx_err] curr_step: f3_live-stream_interaction, err: f3 jsonpath error: ['context', 'ips', '0'], has no path context]
2024-10-01 03:11:26.211
2024-10-01 03:11:26.211 /usr/local/lib/python3.7/site-packages/asgard/entry.py:58: AssertionError
2024-10-01 03:11:26.211 ------------------------------ Captured log call -------------------------------
2024-10-01 03:11:26.211 2024-10-01 03:10:11 INFO func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7f402f648320>
2024-10-01 03:11:26.211 2024-10-01 03:10:11 INFO func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7f402f648680>
2024-10-01 03:11:26.211 2024-10-01 03:10:11 INFO func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7f402f64e050>
2024-10-01 03:11:26.211 2024-10-01 03:10:11 INFO func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7f402f64e3b0>
2024-10-01 03:11:26.211 2024-10-01 03:10:11 INFO func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7f402f64e710>
2024-10-01 03:11:26.211 2024-10-01 03:10:11 INFO func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7f402f64ea70>
2024-10-01 03:11:26.211 2024-10-01 03:10:11 INFO func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7f402f64edd0>
2024-10-01 03:11:26.211 2024-10-01 03:10:11 INFO func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7f402f637170>
2024-10-01 03:11:26.211 2024-10-01 03:10:11 INFO egress: videoarch.livenet.qa_live_faas-asgard_invoke, body: FuncRequest(FuncID='f1', Func='live-context', Description='ip', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"context": {"ips": ["10.113.249.85", "10.113.249.57", "10.113.249.55", "10.113.109.247", "10.118.175.128"], "source_third": "source-fcdn-sg.s.worldfcdn.com"}, "ctx_cfg": {}}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), RuntCtx=None, Base=Base(LogID='2024100103101101011408406842323', Caller='tesla.us.livenet_qa', Addr='10.114.84.68', Client='', TrafficEnv=None, Extra={'cluster': 'default', 'env': 'prod'}))
2024-10-01 03:11:26.211 2024-10-01 03:10:11 INFO egress: videoarch.livenet.qa_live_faas-asgard_invoke, resp: FuncResponse(Trace=Trace(OK=True, Err='', Extra=''), Data='{"context": {"ips": ["10.113.249.85", "10.113.249.57", "10.113.249.55", "10.113.109.247", "10.118.175.128"], "source_third": "source-fcdn-sg.s.worldfcdn.com"}}', BaseResp=BaseResp(StatusMessage='', StatusCode=0, Extra={'LogID': '2024100103101101011408406842323'}))
2024-10-01 03:11:26.211 2024-10-01 03:10:11 INFO egress: videoarch.livenet.qa_live_faas-asgard_invoke, body: FuncRequest(FuncID='f2', Func='live-get_random', Description='', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"random_schema": "stream-test-${r}", "ctx_cfg": {}}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), RuntCtx=None, Base=Base(LogID='2024100103101101011408406840816', Caller='tesla.us.livenet_qa', Addr='10.114.84.68', Client='', TrafficEnv=None, Extra={'cluster': 'default', 'env': 'prod'}))
2024-10-01 03:11:26.211 2024-10-01 03:10:11 INFO egress: videoarch.livenet.qa_live_faas-asgard_invoke, resp: FuncResponse(Trace=Trace(OK=True, Err='', Extra=''), Data='{"data": "stream-test-7r3mtbprqujjpe2b"}', BaseResp=BaseResp(StatusMessage='', StatusCode=0, Extra={'LogID': '2024100103101101011408406840816'}))
2024-10-01 03:11:26.211 2024-10-01 03:10:11 INFO [get key replace] from_key: f1-vhost, to_key: vhost, to_key_val:
2024-10-01 03:11:26.211 2024-10-01 03:10:11 INFO [get key replace] from_key: f1-app, to_key: app, to_key_val:
2024-10-01 03:11:26.211 2024-10-01 03:10:11 ERROR [ctx_err] curr_step: f3_live-stream_interaction, err: f3 jsonpath error: ['context', 'ips', '0'], has no path context, detail: Traceback (most recent call last):
2024-10-01 03:11:26.211   File "/usr/local/lib/python3.7/site-packages/asgard/light_house/sugar_context.py", line 19, in dict_jsonpath
2024-10-01 03:11:26.211     if isinstance(_resp, dict)
2024-10-01 03:11:26.211 KeyError: 'context'
2024-10-01 03:11:26.211
2024-10-01 03:11:26.211 During handling of the above exception, another exception occurred:
2024-10-01 03:11:26.211
2024-10-01 03:11:26.211 Traceback (most recent call last):
2024-10-01 03:11:26.211   File "/usr/local/lib/python3.7/site-packages/asgard/light_house/magic_pipeline.py", line 155, in runtime
2024-10-01 03:11:26.211     req.Params.ReqDataJson = json.dumps(self.ctx.next_req_params)
2024-10-01 03:11:26.211   File "/usr/local/lib/python3.7/site-packages/asgard/light_house/sugar_context.py", line 167, in next_req_params
2024-10-01 03:11:26.211     self.curr_step, self.resp_map[step[1:]], from_key.split("-")[1:]
2024-10-01 03:11:26.211   File "/usr/local/lib/python3.7/site-packages/asgard/light_house/sugar_context.py", line 25, in dict_jsonpath
2024-10-01 03:11:26.211     raise Exception(f"{curr_step} jsonpath error: {ab_path}, has no path {key}")
2024-10-01 03:11:26.211 Exception: f3 jsonpath error: ['context', 'ips', '0'], has no path context
2024-10-01 03:11:26.211
2024-10-01 03:11:26.211 2024-10-01 03:10:11 INFO [runtime err] [[ctx_err] curr_step: f3_live-stream_interaction, err: f3 jsonpath error: ['context', 'ips', '0'], has no path context]
2024-10-01 03:11:26.211 2024-10-01 03:10:11 INFO [中间态 req] {'f1': FuncRequest(FuncID='f1', Func='live-context', Description='ip', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"context": {"ips": ["10.113.249.85", "10.113.249.57", "10.113.249.55", "10.113.109.247", "10.118.175.128"], "source_third": "source-fcdn-sg.s.worldfcdn.com"}, "ctx_cfg": {}}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), Before=None, After=None, Base=None), 'f2': FuncRequest(FuncID='f2', Func='live-get_random', Description='', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"random_schema": "stream-test-${r}", "ctx_cfg": {}}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), Before=None, After=None, Base=None), 'f3': FuncRequest(FuncID='f3', Func='live-stream_interaction', Description='push stream with pri=2 and pri=3', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"ctx_cfg": {}, "cmd_parallel": false, "cmd_async": true, "cmd_client": "nss_bench", "cmd": " --vvv push --flv /opt/tiger/ftest_lowcode_core/media_cache/h264_50x50.flv --url \'rtmp://${ip}:1935/${app}/${stream}?vhost=${vhost}&internal=true&pri=2\' --type rtmp --duration 60", "cmd_timeout": "", "mode": "local", "cmd_list": []}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), Before=None, After=None, Base=None)}
2024-10-01 03:11:26.211 2024-10-01 03:10:11 INFO [中间态 resp] {'f1': {'context': {'ips': ['10.113.249.85', '10.113.249.57', '10.113.249.55', '10.113.109.247', '10.118.175.128'], 'source_third': 'source-fcdn-sg.s.worldfcdn.com'}}, 'f2': {'data': 'stream-test-7r3mtbprqujjpe2b'}, 'f3': None}
2024-10-01 03:11:26.211 2024-10-01 03:10:11 ERROR [[ctx_err] curr_step: f3_live-stream_interaction, err: f3 jsonpath error: ['context', 'ips', '0'], has no path context]
2024-10-01 03:11:26.213 _ TestPlanEnv_229.test_US_TTP[206451_OnPublishStart - Stream online - No priority parameter 2<3, 2=2 - Overwrite failed - Verify GetRelaySource successful.-req_data37] _
2024-10-01 03:11:26.213 [gw7] linux -- Python 3.7.7 /usr/local/bin/python
2024-10-01 03:11:26.213
2024-10-01 03:11:26.213 self = <test_229.TestPlanEnv_229 object at 0x7f402fd43890>
2024-10-01 03:11:26.213 description = '206451_OnPublishStart - Stream online - No priority parameter 2<3, 2=2 - Overwrite failed - Verify GetRelaySource successful.'
2024-10-01 03:11:26.213 req_data = MagicPipelineRequest(Description='206451_OnPublishStart - Stream online - No priority parameter 2<3, 2=2 - Overwrite f...son=''), Before=None, After=None, Base=None)], AopFunc=AopFunc(SetUp=[], TearDown=[], RuntEnv={}, RuntCtx={}), Base={})
2024-10-01 03:11:26.213
2024-10-01 03:11:26.213     @allure.title("{description}")
2024-10-01 03:11:26.213     @pytest.mark.parametrize(
2024-10-01 03:11:26.213         "description, req_data",
2024-10-01 03:11:26.213         [
2024-10-01 03:11:26.213             (case.Description, case)
2024-10-01 03:11:26.213             for case in case_info["US-TTP"]
2024-10-01 03:11:26.213         ],
2024-10-01 03:11:26.213     )
2024-10-01 03:11:26.213     def test_US_TTP(self, description, req_data):
2024-10-01 03:11:26.213 >       run_pipeline(req_data)
2024-10-01 03:11:26.213
2024-10-01 03:11:26.213 asgard_gen/test_229.py:24:
2024-10-01 03:11:26.213 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-10-01 03:11:26.213 /usr/local/lib/python3.7/site-packages/asgard/entry.py:75: in run_pipeline
2024-10-01 03:11:26.213     return generate_allure(mix_req_map, step_resp_map, ok, err)
2024-10-01 03:11:26.213 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-10-01 03:11:26.213
2024-10-01 03:11:26.213 req = {'f1': FuncRequest(FuncID='f1', Func='live-context', Description='ip', Params=JsonReqData(IsJsonData=True, ReqData={'r...cmd_list": []}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), Before=None, After=None, Base=None)}
2024-10-01 03:11:26.213 resp = {'f1': {'context': {'ips': ['10.113.249.85', '10.113.249.57', '10.113.249.55', '10.113.109.247', '10.118.175.128'], 'source_third': 'source-fcdn-sg.s.worldfcdn.com'}}, 'f2': {'data': 'stream-test-xllccn45fkxt81yp'}, 'f3': None}
2024-10-01 03:11:26.213 ok = False
2024-10-01 03:11:26.213 err = "[[ctx_err] curr_step: f3_live-stream_interaction, err: f3 jsonpath error: ['context', 'ips', '0'], has no path context]"
2024-10-01 03:11:26.213
2024-10-01 03:11:26.213     def generate_allure(
2024-10-01 03:11:26.213         req: Dict[str, FuncRequest], resp: Dict[str, FuncResponse], ok: bool, err: str
2024-10-01 03:11:26.213     ):
2024-10-01 03:11:26.213         for step, step_req in req.items():
2024-10-01 03:11:26.213             step_info = (
2024-10-01 03:11:26.213                 f"{step}. {step_req.Description}"
2024-10-01 03:11:26.213                 if step_req.Description
2024-10-01 03:11:26.213                 else f"{step}. {step_req.Func}"
2024-10-01 03:11:26.213             )
2024-10-01 03:11:26.213             with allure.step(step_info):
2024-10-01 03:11:26.213                 # attach req
2024-10-01 03:11:26.213                 allure.attach(
2024-10-01 03:11:26.213                     pprint.pformat(json.loads(simple_thrift2json(step_req)), depth=10),
2024-10-01 03:11:26.213                     "req",
2024-10-01 03:11:26.213                     allure.attachment_type.JSON,
2024-10-01 03:11:26.213                 )
2024-10-01 03:11:26.213                 # attach resp
2024-10-01 03:11:26.213                 step_resp = resp.get(step, {})
2024-10-01 03:11:26.213                 allure.attach(
2024-10-01 03:11:26.213                     pprint.pformat(json.loads(simple_thrift2json(step_resp)), depth=10),
2024-10-01 03:11:26.213                     "resp",
2024-10-01 03:11:26.213                     allure.attachment_type.JSON,
2024-10-01 03:11:26.213                 )
2024-10-01 03:11:26.213
2024-10-01 03:11:26.213         if not ok:
2024-10-01 03:11:26.213             logging.error(err)
2024-10-01 03:11:26.213 >           raise AssertionError(err)
2024-10-01 03:11:26.213 E           AssertionError: [[ctx_err] curr_step: f3_live-stream_interaction, err: f3 jsonpath error: ['context', 'ips', '0'], has no path context]
2024-10-01 03:11:26.213
2024-10-01 03:11:26.213 /usr/local/lib/python3.7/site-packages/asgard/entry.py:58: AssertionError
2024-10-01 03:11:26.213 ------------------------------ Captured log call -------------------------------
2024-10-01 03:11:26.213 2024-10-01 03:10:11 INFO func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7f402f60bb90>
2024-10-01 03:11:26.213 2024-10-01 03:10:11 INFO func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7f402f8390e0>
2024-10-01 03:11:26.213 2024-10-01 03:10:11 INFO func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7f402f839440>
2024-10-01 03:11:26.213 2024-10-01 03:10:11 INFO func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7f402f8397a0>
2024-10-01 03:11:26.213 2024-10-01 03:10:11 INFO func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7f402f839b00>
2024-10-01 03:11:26.213 2024-10-01 03:10:11 INFO func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7f402f839e60>
2024-10-01 03:11:26.213 2024-10-01 03:10:11 INFO func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7f402f871200>
2024-10-01 03:11:26.213 2024-10-01 03:10:11 INFO func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7f402f871560>
2024-10-01 03:11:26.213 2024-10-01 03:10:11 INFO egress: videoarch.livenet.qa_live_faas-asgard_invoke, body: FuncRequest(FuncID='f1', Func='live-context', Description='ip', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"context": {"ips": ["10.113.249.85", "10.113.249.57", "10.113.249.55", "10.113.109.247", "10.118.175.128"], "source_third": "source-fcdn-sg.s.worldfcdn.com"}, "ctx_cfg": {}}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), RuntCtx=None, Base=Base(LogID='2024100103101101011408406899663', Caller='tesla.us.livenet_qa', Addr='10.114.84.68', Client='', TrafficEnv=None, Extra={'cluster': 'default', 'env': 'prod'}))
2024-10-01 03:11:26.213 2024-10-01 03:10:11 INFO egress: videoarch.livenet.qa_live_faas-asgard_invoke, resp: FuncResponse(Trace=Trace(OK=True, Err='', Extra=''), Data='{"context": {"ips": ["10.113.249.85", "10.113.249.57", "10.113.249.55", "10.113.109.247", "10.118.175.128"], "source_third": "source-fcdn-sg.s.worldfcdn.com"}}', BaseResp=BaseResp(StatusMessage='', StatusCode=0, Extra={'LogID': '2024100103101101011408406899663'}))
2024-10-01 03:11:26.213 2024-10-01 03:10:11 INFO egress: videoarch.livenet.qa_live_faas-asgard_invoke, body: FuncRequest(FuncID='f2', Func='live-get_random', Description='', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"random_schema": "stream-test-${r}", "ctx_cfg": {}}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), RuntCtx=None, Base=Base(LogID='2024100103101101011408406824650', Caller='tesla.us.livenet_qa', Addr='10.114.84.68', Client='', TrafficEnv=None, Extra={'cluster': 'default', 'env': 'prod'}))
2024-10-01 03:11:26.213 2024-10-01 03:10:11 INFO egress: videoarch.livenet.qa_live_faas-asgard_invoke, resp: FuncResponse(Trace=Trace(OK=True, Err='', Extra=''), Data='{"data": "stream-test-xllccn45fkxt81yp"}', BaseResp=BaseResp(StatusMessage='', StatusCode=0, Extra={'LogID': '2024100103101101011408406824650'}))
2024-10-01 03:11:26.213 2024-10-01 03:10:11 INFO [get key replace] from_key: f1-vhost, to_key: vhost, to_key_val:
2024-10-01 03:11:26.213 2024-10-01 03:10:11 INFO [get key replace] from_key: f1-app, to_key: app, to_key_val:
2024-10-01 03:11:26.213 2024-10-01 03:10:11 ERROR [ctx_err] curr_step: f3_live-stream_interaction, err: f3 jsonpath error: ['context', 'ips', '0'], has no path context, detail: Traceback (most recent call last):
2024-10-01 03:11:26.213   File "/usr/local/lib/python3.7/site-packages/asgard/light_house/sugar_context.py", line 19, in dict_jsonpath
2024-10-01 03:11:26.213     if isinstance(_resp, dict)
2024-10-01 03:11:26.213 KeyError: 'context'
2024-10-01 03:11:26.213
2024-10-01 03:11:26.213 During handling of the above exception, another exception occurred:
2024-10-01 03:11:26.213
2024-10-01 03:11:26.213 Traceback (most recent call last):
2024-10-01 03:11:26.213   File "/usr/local/lib/python3.7/site-packages/asgard/light_house/magic_pipeline.py", line 155, in runtime
2024-10-01 03:11:26.213     req.Params.ReqDataJson = json.dumps(self.ctx.next_req_params)
2024-10-01 03:11:26.213   File "/usr/local/lib/python3.7/site-packages/asgard/light_house/sugar_context.py", line 167, in next_req_params
2024-10-01 03:11:26.213     self.curr_step, self.resp_map[step[1:]], from_key.split("-")[1:]
2024-10-01 03:11:26.213   File "/usr/local/lib/python3.7/site-packages/asgard/light_house/sugar_context.py", line 25, in dict_jsonpath
2024-10-01 03:11:26.213     raise Exception(f"{curr_step} jsonpath error: {ab_path}, has no path {key}")
2024-10-01 03:11:26.213 Exception: f3 jsonpath error: ['context', 'ips', '0'], has no path context
2024-10-01 03:11:26.213
2024-10-01 03:11:26.213 2024-10-01 03:10:11 INFO [runtime err] [[ctx_err] curr_step: f3_live-stream_interaction, err: f3 jsonpath error: ['context', 'ips', '0'], has no path context]
2024-10-01 03:11:26.213 2024-10-01 03:10:11 INFO [中间态 req] {'f1': FuncRequest(FuncID='f1', Func='live-context', Description='ip', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"context": {"ips": ["10.113.249.85", "10.113.249.57", "10.113.249.55", "10.113.109.247", "10.118.175.128"], "source_third": "source-fcdn-sg.s.worldfcdn.com"}, "ctx_cfg": {}}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), Before=None, After=None, Base=None), 'f2': FuncRequest(FuncID='f2', Func='live-get_random', Description='', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"random_schema": "stream-test-${r}", "ctx_cfg": {}}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), Before=None, After=None, Base=None), 'f3': FuncRequest(FuncID='f3', Func='live-stream_interaction', Description='push stream with pri=2 and pri=3', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"ctx_cfg": {}, "cmd_parallel": false, "cmd_async": true, "cmd_client": "nss_bench", "cmd": " --vvv push --flv /opt/tiger/ftest_lowcode_core/media_cache/h264_50x50.flv --url \'rtmp://${ip}:1935/${app}/${stream}?vhost=${vhost}&internal=true&pri=3\' --type rtmp --duration 60", "cmd_timeout": "", "mode": "local", "cmd_list": []}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), Before=None, After=None, Base=None)}
2024-10-01 03:11:26.213 2024-10-01 03:10:11 INFO [中间态 resp] {'f1': {'context': {'ips': ['10.113.249.85', '10.113.249.57', '10.113.249.55', '10.113.109.247', '10.118.175.128'], 'source_third': 'source-fcdn-sg.s.worldfcdn.com'}}, 'f2': {'data': 'stream-test-xllccn45fkxt81yp'}, 'f3': None}
2024-10-01 03:11:26.213 2024-10-01 03:10:11 ERROR [[ctx_err] curr_step: f3_live-stream_interaction, err: f3 jsonpath error: ['context', 'ips', '0'], has no path context]
2024-10-01 03:11:26.213 _ TestPlanEnv_229.test_US_TTP[206114_OnPlayStart - Transcoded stream - First pull triggers transcoding - Subsequent pull - Returns success with correct address.-req_data18] _
2024-10-01 03:11:26.213 [gw9] linux -- Python 3.7.7 /usr/local/bin/python
2024-10-01 03:11:26.213
2024-10-01 03:11:26.213 self = <test_229.TestPlanEnv_229 object at 0x7fefbb21e150>
2024-10-01 03:11:26.213 description = '206114_OnPlayStart - Transcoded stream - First pull triggers transcoding - Subsequent pull - Returns success with correct address.'
2024-10-01 03:11:26.213 req_data = MagicPipelineRequest(Description='206114_OnPlayStart - Transcoded stream - First pull triggers transcoding - Subsequen...son=''), Before=None, After=None, Base=None)], AopFunc=AopFunc(SetUp=[], TearDown=[], RuntEnv={}, RuntCtx={}), Base={})
2024-10-01 03:11:26.213
2024-10-01 03:11:26.213     @allure.title("{description}")
2024-10-01 03:11:26.213     @pytest.mark.parametrize(
2024-10-01 03:11:26.213         "description, req_data",
2024-10-01 03:11:26.213         [
2024-10-01 03:11:26.213             (case.Description, case)
2024-10-01 03:11:26.213             for case in case_info["US-TTP"]
2024-10-01 03:11:26.213         ],
2024-10-01 03:11:26.213     )
2024-10-01 03:11:26.213     def test_US_TTP(self, description, req_data):
2024-10-01 03:11:26.213 >       run_pipeline(req_data)
2024-10-01 03:11:26.213
2024-10-01 03:11:26.213 asgard_gen/test_229.py:24:
2024-10-01 03:11:26.213 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-10-01 03:11:26.213 /usr/local/lib/python3.7/site-packages/asgard/entry.py:75: in run_pipeline
2024-10-01 03:11:26.213     return generate_allure(mix_req_map, step_resp_map, ok, err)
2024-10-01 03:11:26.213 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-10-01 03:11:26.213
2024-10-01 03:11:26.213 req = {'f1': FuncRequest(FuncID='f1', Func='live-context', Description='VAS', Params=JsonReqData(IsJsonData=True, ReqData={'...cfg": {}}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), Before=None, After=None, Base=None), ...}
2024-10-01 03:11:26.213 resp = {'f1': {'context': {'app': 'live-trans', 'vhost': 'push-test-tt01.videoarchserverqa.xyz'}}, 'f10': None, 'f2': {'conte...118.175.128'], 'source_third': 'source-fcdn-sg.s.worldfcdn.com'}}, 'f3': {'data': 'stream-test-tm3ldcwoi8cdy1lp'}, ...}
2024-10-01 03:11:26.213 ok = False
2024-10-01 03:11:26.213 err = '[[runtime_err] curr_step: f10_live-assert, err: assert failed]'
2024-10-01 03:11:26.213
2024-10-01 03:11:26.213     def generate_allure(
2024-10-01 03:11:26.213         req: Dict[str, FuncRequest], resp: Dict[str, FuncResponse], ok: bool, err: str
2024-10-01 03:11:26.213     ):
2024-10-01 03:11:26.213         for step, step_req in req.items():
2024-10-01 03:11:26.213             step_info = (
2024-10-01 03:11:26.213                 f"{step}. {step_req.Description}"
2024-10-01 03:11:26.213                 if step_req.Description
2024-10-01 03:11:26.213                 else f"{step}. {step_req.Func}"
2024-10-01 03:11:26.213             )
2024-10-01 03:11:26.213             with allure.step(step_info):
2024-10-01 03:11:26.213                 # attach req
2024-10-01 03:11:26.213                 allure.attach(
2024-10-01 03:11:26.213                     pprint.pformat(json.loads(simple_thrift2json(step_req)), depth=10),
2024-10-01 03:11:26.213                     "req",
2024-10-01 03:11:26.213                     allure.attachment_type.JSON,
2024-10-01 03:11:26.213                 )
2024-10-01 03:11:26.213                 # attach resp
2024-10-01 03:11:26.213                 step_resp = resp.get(step, {})
2024-10-01 03:11:26.213                 allure.attach(
2024-10-01 03:11:26.213                     pprint.pformat(json.loads(simple_thrift2json(step_resp)), depth=10),
2024-10-01 03:11:26.213                     "resp",
2024-10-01 03:11:26.213                     allure.attachment_type.JSON,
2024-10-01 03:11:26.213                 )
2024-10-01 03:11:26.213
2024-10-01 03:11:26.213         if not ok:
2024-10-01 03:11:26.213             logging.error(err)
2024-10-01 03:11:26.213 >           raise AssertionError(err)
2024-10-01 03:11:26.213 E           AssertionError: [[runtime_err] curr_step: f10_live-assert, err: assert failed]
2024-10-01 03:11:26.213
2024-10-01 03:11:26.213 /usr/local/lib/python3.7/site-packages/asgard/entry.py:58: AssertionError
2024-10-01 03:11:26.213 ------------------------------ Captured log call -------------------------------
2024-10-01 03:11:26.213 2024-10-01 03:10:03 INFO [load runt env] psm: videoarch.livenet.qa_live_faas, runt_env: {'idc': '', 'env': '', 'cluster': 'faas-us-ttp', 'trans': 'ttheader'}]
2024-10-01 03:11:26.213 2024-10-01 03:10:04 INFO func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7fefbaa92b00>
2024-10-01 03:11:26.213 2024-10-01 03:10:04 INFO func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7fefbaa92e60>
2024-10-01 03:11:26.213 2024-10-01 03:10:04 INFO func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7fefc0113200>
2024-10-01 03:11:26.213 2024-10-01 03:10:04 INFO func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7fefc0113290>
2024-10-01 03:11:26.213 2024-10-01 03:10:04 INFO func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7fefc0113680>
2024-10-01 03:11:26.213 2024-10-01 03:10:04 INFO func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7fefc01139e0>
2024-10-01 03:11:26.213 2024-10-01 03:10:06 INFO func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7fefc0113d40>
2024-10-01 03:11:26.213 2024-10-01 03:10:06 INFO func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7fefbaab30e0>
2024-10-01 03:11:26.213 2024-10-01 03:10:06 INFO func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7fefbaab3440>
2024-10-01 03:11:26.213 2024-10-01 03:10:06 INFO func: asgard_invoke, target_func: <function Client._compose_middlewares.<locals>.f.<locals>.new_next at 0x7fefbaab37a0>
2024-10-01 03:11:26.213 2024-10-01 03:10:06 INFO egress: videoarch.livenet.qa_live_faas-asgard_invoke, body: FuncRequest(FuncID='f1', Func='live-context', Description='VAS', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"context": {"vhost": "push-test-tt01.videoarchserverqa.xyz", "app": "live-trans"}, "ctx_cfg": {}}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), RuntCtx=None, Base=Base(LogID='2024100103100301011408406824028', Caller='tesla.us.livenet_qa', Addr='10.114.84.68', Client='', TrafficEnv=None, Extra={'cluster': 'default', 'env': 'prod'}))
2024-10-01 03:11:26.213 2024-10-01 03:10:06 INFO egress: videoarch.livenet.qa_live_faas-asgard_invoke, resp: FuncResponse(Trace=Trace(OK=True, Err='', Extra=''), Data='{"context": {"vhost": "push-test-tt01.videoarchserverqa.xyz", "app": "live-trans"}}', BaseResp=BaseResp(StatusMessage='', StatusCode=0, Extra={'LogID': '2024100103100301011408406824028'}))
2024-10-01 03:11:26.213 2024-10-01 03:10:06 INFO egress: videoarch.livenet.qa_live_faas-asgard_invoke, body: FuncRequest(FuncID='f2', Func='live-context', Description='pod ip', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"context": {"ips": ["10.113.249.85", "10.113.249.57", "10.113.249.55", "10.113.109.247", "10.118.175.128"], "source_third": "source-fcdn-sg.s.worldfcdn.com"}, "ctx_cfg": {}}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), RuntCtx=None, Base=Base(LogID='2024100103100401011408406831436', Caller='tesla.us.livenet_qa', Addr='10.114.84.68', Client='', TrafficEnv=None, Extra={'cluster': 'default', 'env': 'prod'}))
2024-10-01 03:11:26.213 2024-10-01 03:10:06 INFO egress: videoarch.livenet.qa_live_faas-asgard_invoke, resp: FuncResponse(Trace=Trace(OK=True, Err='', Extra=''), Data='{"context": {"ips": ["10.113.249.85", "10.113.249.57", "10.113.249.55", "10.113.109.247", "10.118.175.128"], "source_third": "source-fcdn-sg.s.worldfcdn.com"}}', BaseResp=BaseResp(StatusMessage='', StatusCode=0, Extra={'LogID': '2024100103100401011408406831436'}))
2024-10-01 03:11:26.213 2024-10-01 03:10:06 INFO egress: videoarch.livenet.qa_live_faas-asgard_invoke, body: FuncRequest(FuncID='f3', Func='live-get_random', Description='', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"random_schema": "stream-test-${r}", "ctx_cfg": {}}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), RuntCtx=None, Base=Base(LogID='2024100103100401011408406877612', Caller='tesla.us.livenet_qa', Addr='10.114.84.68', Client='', TrafficEnv=None, Extra={'cluster': 'default', 'env': 'prod'}))
2024-10-01 03:11:26.213 2024-10-01 03:10:06 INFO egress: videoarch.livenet.qa_live_faas-asgard_invoke, resp: FuncResponse(Trace=Trace(OK=True, Err='', Extra=''), Data='{"data": "stream-test-tm3ldcwoi8cdy1lp"}', BaseResp=BaseResp(StatusMessage='', StatusCode=0, Extra={'LogID': '2024100103100401011408406877612'}))
2024-10-01 03:11:26.213 2024-10-01 03:10:06 INFO [get key replace] from_key: f3-data, to_key: stream, to_key_val: stream-test-tm3ldcwoi8cdy1lp
2024-10-01 03:11:26.213 2024-10-01 03:10:06 INFO egress: videoarch.livenet.qa_live_faas-asgard_invoke, body: FuncRequest(FuncID='f4', Func='live-context', Description='get stream_md', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"context": "${stream}_md", "ctx_cfg": {}, "stream": "stream-test-tm3ldcwoi8cdy1lp"}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), RuntCtx=None, Base=Base(LogID='2024100103100401011408406850042', Caller='tesla.us.livenet_qa', Addr='10.114.84.68', Client='', TrafficEnv=None, Extra={'cluster': 'default', 'env': 'prod'}))
2024-10-01 03:11:26.213 2024-10-01 03:10:06 INFO egress: videoarch.livenet.qa_live_faas-asgard_invoke, resp: FuncResponse(Trace=Trace(OK=True, Err='', Extra=''), Data='{"context": "stream-test-tm3ldcwoi8cdy1lp_md"}', BaseResp=BaseResp(StatusMessage='', StatusCode=0, Extra={'LogID': '2024100103100401011408406850042'}))
2024-10-01 03:11:26.213 2024-10-01 03:10:06 INFO [get key replace] from_key: f3-data, to_key: stream, to_key_val: stream-test-tm3ldcwoi8cdy1lp
2024-10-01 03:11:26.213 2024-10-01 03:10:06 INFO [get key replace] from_key: f1-app, to_key: app, to_key_val: live-trans
2024-10-01 03:11:26.213 2024-10-01 03:10:06 INFO [get key replace] from_key: f1-vhost, to_key: vhost, to_key_val: push-test-tt01.videoarchserverqa.xyz
2024-10-01 03:11:26.213 2024-10-01 03:10:06 INFO [get key replace] from_key: $f2-context-ips-0, to_key: ip, to_key_val: 10.113.249.85
2024-10-01 03:11:26.213 2024-10-01 03:10:06 INFO egress: videoarch.livenet.qa_live_faas-asgard_invoke, body: FuncRequest(FuncID='f5', Func='live-stream_interaction', Description='push stream', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"ctx_cfg": {}, "cmd_parallel": false, "cmd_async": true, "cmd_client": "nss_bench", "cmd": " --vvv push --flv /opt/tiger/ftest_lowcode_core/media_cache/mot_h264.flv --url \'rtmp://${ip}:1935/${app}/${stream}?vhost=${vhost}&internal=true\' --type rtmp --duration 60", "cmd_timeout": "", "mode": "local", "cmd_list": [], "stream": "stream-test-tm3ldcwoi8cdy1lp", "app": "live-trans", "vhost": "push-test-tt01.videoarchserverqa.xyz", "ip": "10.113.249.85"}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), RuntCtx=None, Base=Base(LogID='2024100103100401011408406826972', Caller='tesla.us.livenet_qa', Addr='10.114.84.68', Client='', TrafficEnv=None, Extra={'cluster': 'default', 'env': 'prod'}))
2024-10-01 03:11:26.213 2024-10-01 03:10:07 INFO egress: videoarch.livenet.qa_live_faas-asgard_invoke, resp: FuncResponse(Trace=Trace(OK=True, Err='', Extra=''), Data='{"code": 0, "msg": "nil return for async call", "outputs": [], "extra": {"log_id": "20241001031005D76BDEE61A2B83B00889", "idc": "useast5", "host": "10.114.86.216"}, "cmd": " --vvv push --flv /opt/tiger/ftest_lowcode_core/media_cache/mot_h264.flv --url \'rtmp://10.113.249.85:1935/live-trans/stream-test-tm3ldcwoi8cdy1lp?vhost=push-test-tt01.videoarchserverqa.xyz&internal=true\' --type rtmp --duration 60"}', BaseResp=BaseResp(StatusMessage='', StatusCode=0, Extra={'LogID': '2024100103100401011408406826972'}))
2024-10-01 03:11:26.213 2024-10-01 03:10:07 INFO [get key replace] from_key: f5-code, to_key: code, to_key_val: 0
2024-10-01 03:11:26.213 2024-10-01 03:10:07 INFO egress: videoarch.livenet.qa_live_faas-asgard_invoke, body: FuncRequest(FuncID='f6', Func='live-assert', Description='', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"assert_schemas": {"${code}": ["=", 0]}, "ctx_cfg": {}, "code": 0}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), RuntCtx=None, Base=Base(LogID='2024100103100401011408406846418', Caller='tesla.us.livenet_qa', Addr='10.114.84.68', Client='', TrafficEnv=None, Extra={'cluster': 'default', 'env': 'prod'}))
2024-10-01 03:11:26.213 2024-10-01 03:10:07 INFO egress: videoarch.livenet.qa_live_faas-asgard_invoke, resp: FuncResponse(Trace=Trace(OK=True, Err='', Extra=''), Data='{"result": true, "logs": ["[assert] true: <0> should be = <0>"]}', BaseResp=BaseResp(StatusMessage='', StatusCode=0, Extra={'LogID': '2024100103100401011408406846418'}))
2024-10-01 03:11:26.213 2024-10-01 03:10:07 INFO egress: videoarch.livenet.qa_live_faas-asgard_invoke, body: FuncRequest(FuncID='f7', Func='live-get_time', Description='', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"time_schema": "timestamp_ms", "ctx_cfg": {}, "shift": ""}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), RuntCtx=None, Base=Base(LogID='2024100103100601011408406889194', Caller='tesla.us.livenet_qa', Addr='10.114.84.68', Client='', TrafficEnv=None, Extra={'cluster': 'default', 'env': 'prod'}))
2024-10-01 03:11:26.213 2024-10-01 03:10:07 INFO egress: videoarch.livenet.qa_live_faas-asgard_invoke, resp: FuncResponse(Trace=Trace(OK=True, Err='', Extra=''), Data='{"data": 1727752207103}', BaseResp=BaseResp(StatusMessage='', StatusCode=0, Extra={'LogID': '2024100103100601011408406889194'}))
2024-10-01 03:11:26.213 2024-10-01 03:10:07 INFO [get key replace] from_key: f4-context, to_key: stream_name, to_key_val: stream-test-tm3ldcwoi8cdy1lp_md
2024-10-01 03:11:26.213 2024-10-01 03:10:07 INFO [get key replace] from_key: f7-data, to_key: timestamp_ms, to_key_val: 1727752207103
2024-10-01 03:11:26.213 2024-10-01 03:10:07 INFO [get key replace] from_key: f1-app, to_key: app, to_key_val: live-trans
2024-10-01 03:11:26.213 2024-10-01 03:10:07 INFO [get key replace] from_key: $f2-context-ips-0, to_key: ip, to_key_val: 10.113.249.85
2024-10-01 03:11:26.213 2024-10-01 03:10:07 INFO [get key replace] from_key: f1-vhost, to_key: vhost, to_key_val: push-test-tt01.videoarchserverqa.xyz
2024-10-01 03:11:26.213 2024-10-01 03:10:07 INFO egress: videoarch.livenet.qa_live_faas-asgard_invoke, body: FuncRequest(FuncID='f8', Func='live-http', Description='first hook on play start trigger transcoding task', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"http_retry_times": 0, "http_retry_interval_seconds": 0, "ctx_cfg": {}, "http_schema": "http", "http_method": "POST", "http_host": "nss-dispatch-tt01.tiktokd.org", "http_port": null, "http_path": "/api/v4/on_play_start", "http_url": "", "http_params": {}, "http_body": {"timestamp_ms": "${timestamp_ms}", "client_id": "1731592288", "server_ip": "${ip}", "server_port": 1935, "host_ip": "${ip}", "host_ipv6": "", "host_pod": "${pod}", "client_ip": "${ip}", "vhost": "${vhost}", "domain": "${vhost}", "app": "${app}", "stream": "${stream_name}", "params": "", "url_type": "", "stream_group": null, "metadata": {"script_info": "{}"}, "is_norm_source": false, "norm_sink_sess_count": 0, "trans_info": null, "media_type": "", "re_hook_params": "", "force_sync": false, "stream_key": "${vhost}:${app}:${stream_name}"}, "http_headers": {"x-tt-env": "canary"}, "json_resp": true, "expect_status": null, "consul_cfg": {}, "stream_name": "stream-test-tm3ldcwoi8cdy1lp_md", "timestamp_ms": 1727752207103, "app": "live-trans", "ip": "10.113.249.85", "vhost": "push-test-tt01.videoarchserverqa.xyz"}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), RuntCtx=None, Base=Base(LogID='2024100103100601011408406885371', Caller='tesla.us.livenet_qa', Addr='10.114.84.68', Client='', TrafficEnv=None, Extra={'cluster': 'default', 'env': 'prod'}))
2024-10-01 03:11:26.213 2024-10-01 03:10:07 INFO egress: videoarch.livenet.qa_live_faas-asgard_invoke, resp: FuncResponse(Trace=Trace(OK=True, Err='', Extra=''), Data='{"status_code": 200, "headers": {"Date": "Tue, 01 Oct 2024 03:10:07 GMT", "Content-Type": "application/json; charset=utf-8", "Content-Length": "99", "Connection": "keep-alive", "X-Tt-Logid": "2024100103100603019883C8E351867601", "server-timing": "inner; dur=13", "x-tt-trace-host": "017d533c2559d9b663bdb998e00c2e1409e3acbdb9c67678be68379a5e8aafe398d1c02f798f9ed54dfb254a37d000890301493c659e6d5b655af6698dc0a976f8", "x-tt-trace-tag": "id=00;cdn-cache=miss", "x-tt-trace-id": "00-24100103100603019883C8E351867601-4A36EE4F675C65DB-00", "Server": "TLB"}, "content": {"version": "1.0.1", "code": 404, "msg": "StatusNotFound", "log_id": "2024100103100603019883C8E351867601"}, "curl": "curl -X POST -H \'Accept: */*\' -H \'Accept-Encoding: gzip, deflate\' -H \'Connection: keep-alive\' -H \'Content-Length: 688\' -H \'Content-Type: application/json\' -H \'User-Agent: python-requests/2.32.3\' -H \'x-tt-env: canary\' -d \'{\\"timestamp_ms\\": 1727752207103, \\"client_id\\": \\"1731592288\\", \\"server_ip\\": \\"10.113.249.85\\", \\"server_port\\": 1935, \\"host_ip\\": \\"10.113.249.85\\", \\"host_ipv6\\": \\"\\", \\"host_pod\\": \\"${pod}\\", \\"client_ip\\": \\"10.113.249.85\\", \\"vhost\\": \\"push-test-tt01.videoarchserverqa.xyz\\", \\"domain\\": \\"push-test-tt01.videoarchserverqa.xyz\\", \\"app\\": \\"live-trans\\", \\"stream\\": \\"stream-test-tm3ldcwoi8cdy1lp_md\\", \\"params\\": \\"\\", \\"url_type\\": \\"\\", \\"stream_group\\": null, \\"metadata\\": {\\"script_info\\": \\"{}\\"}, \\"is_norm_source\\": false, \\"norm_sink_sess_count\\": 0, \\"trans_info\\": null, \\"media_type\\": \\"\\", \\"re_hook_params\\": \\"\\", \\"force_sync\\": false, \\"stream_key\\": \\"push-test-tt01.videoarchserverqa.xyz:live-trans:stream-test-tm3ldcwoi8cdy1lp_md\\"}\' http://nss-dispatch-tt01.tiktokd.org/api/v4/on_play_start"}', BaseResp=BaseResp(StatusMessage='', StatusCode=0, Extra={'LogID': '2024100103100601011408406885371'}))
2024-10-01 03:11:26.213 2024-10-01 03:10:07 INFO [get key replace] from_key: f4-context, to_key: stream_name, to_key_val: stream-test-tm3ldcwoi8cdy1lp_md
2024-10-01 03:11:26.213 2024-10-01 03:10:07 INFO [get key replace] from_key: f7-data, to_key: timestamp_ms, to_key_val: 1727752207103
2024-10-01 03:11:26.213 2024-10-01 03:10:07 INFO [get key replace] from_key: f1-app, to_key: app, to_key_val: live-trans
2024-10-01 03:11:26.213 2024-10-01 03:10:07 INFO [get key replace] from_key: $f2-context-ips-1, to_key: ip, to_key_val: 10.113.249.57
2024-10-01 03:11:26.213 2024-10-01 03:10:07 INFO [get key replace] from_key: f1-vhost, to_key: vhost, to_key_val: push-test-tt01.videoarchserverqa.xyz
2024-10-01 03:11:26.213 2024-10-01 03:10:07 INFO egress: videoarch.livenet.qa_live_faas-asgard_invoke, body: FuncRequest(FuncID='f9', Func='live-http', Description='hook on play start with transcode stream', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"http_retry_times": 0, "http_retry_interval_seconds": 0, "ctx_cfg": {"delay": 10}, "http_schema": "http", "http_method": "POST", "http_host": "nss-dispatch-tt01.tiktokd.org", "http_port": null, "http_path": "/api/v4/on_play_start", "http_url": "", "http_params": {}, "http_body": {"timestamp_ms": "${timestamp_ms}", "client_id": "1731592288", "server_ip": "${ip}", "server_port": 1935, "host_ip": "${ip}", "host_ipv6": "", "host_pod": "${pod}", "client_ip": "${ip}", "vhost": "${vhost}", "domain": "${vhost}", "app": "${app}", "stream": "${stream_name}", "params": "", "url_type": "", "stream_group": null, "metadata": {"script_info": "{}"}, "is_norm_source": false, "norm_sink_sess_count": 0, "trans_info": null, "media_type": "", "re_hook_params": "", "force_sync": false, "stream_key": "${vhost}:${app}:${stream_name}"}, "http_headers": {"x-tt-env": "canary"}, "json_resp": true, "expect_status": null, "consul_cfg": {}, "stream_name": "stream-test-tm3ldcwoi8cdy1lp_md", "timestamp_ms": 1727752207103, "app": "live-trans", "ip": "10.113.249.57", "vhost": "push-test-tt01.videoarchserverqa.xyz"}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), RuntCtx=None, Base=Base(LogID='2024100103100601011408406896051', Caller='tesla.us.livenet_qa', Addr='10.114.84.68', Client='', TrafficEnv=None, Extra={'cluster': 'default', 'env': 'prod'}))
2024-10-01 03:11:26.213 2024-10-01 03:10:17 INFO egress: videoarch.livenet.qa_live_faas-asgard_invoke, resp: FuncResponse(Trace=Trace(OK=True, Err='', Extra=''), Data='{"status_code": 200, "headers": {"Date": "Tue, 01 Oct 2024 03:10:17 GMT", "Content-Type": "application/json; charset=utf-8", "Content-Length": "99", "Connection": "keep-alive", "X-Tt-Logid": "20241001031016BADBD7FF6CA7B1805F30", "server-timing": "inner; dur=21", "x-tt-trace-host": "017d533c2559d9b663bdb998e00c2e1409e1f9fc5e9bee731242067e030c7b3fe0479ef63b397dc8aa9cd361c72e04c7d02b71c65311974ee29ee83d90478ddf80", "x-tt-trace-tag": "id=00;cdn-cache=miss", "x-tt-trace-id": "00-241001031016BADBD7FF6CA7B1805F30-18C78B7680E955B9-00", "Server": "TLB"}, "content": {"version": "1.0.1", "code": 404, "msg": "StatusNotFound", "log_id": "20241001031016BADBD7FF6CA7B1805F30"}, "curl": "curl -X POST -H \'Accept: */*\' -H \'Accept-Encoding: gzip, deflate\' -H \'Connection: keep-alive\' -H \'Content-Length: 688\' -H \'Content-Type: application/json\' -H \'User-Agent: python-requests/2.32.3\' -H \'x-tt-env: canary\' -d \'{\\"timestamp_ms\\": 1727752207103, \\"client_id\\": \\"1731592288\\", \\"server_ip\\": \\"10.113.249.57\\", \\"server_port\\": 1935, \\"host_ip\\": \\"10.113.249.57\\", \\"host_ipv6\\": \\"\\", \\"host_pod\\": \\"${pod}\\", \\"client_ip\\": \\"10.113.249.57\\", \\"vhost\\": \\"push-test-tt01.videoarchserverqa.xyz\\", \\"domain\\": \\"push-test-tt01.videoarchserverqa.xyz\\", \\"app\\": \\"live-trans\\", \\"stream\\": \\"stream-test-tm3ldcwoi8cdy1lp_md\\", \\"params\\": \\"\\", \\"url_type\\": \\"\\", \\"stream_group\\": null, \\"metadata\\": {\\"script_info\\": \\"{}\\"}, \\"is_norm_source\\": false, \\"norm_sink_sess_count\\": 0, \\"trans_info\\": null, \\"media_type\\": \\"\\", \\"re_hook_params\\": \\"\\", \\"force_sync\\": false, \\"stream_key\\": \\"push-test-tt01.videoarchserverqa.xyz:live-trans:stream-test-tm3ldcwoi8cdy1lp_md\\"}\' http://nss-dispatch-tt01.tiktokd.org/api/v4/on_play_start"}', BaseResp=BaseResp(StatusMessage='', StatusCode=0, Extra={'LogID': '2024100103100601011408406896051'}))
2024-10-01 03:11:26.213 2024-10-01 03:10:17 INFO [get key replace] from_key: f9-code, to_key: code, to_key_val: 404
2024-10-01 03:11:26.213 2024-10-01 03:10:17 INFO egress: videoarch.livenet.qa_live_faas-asgard_invoke, body: FuncRequest(FuncID='f10', Func='live-assert', Description='', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"assert_schemas": {"${code}": ["=", 0]}, "ctx_cfg": {}, "code": 404}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), RuntCtx=None, Base=Base(LogID='2024100103100601011408406865995', Caller='tesla.us.livenet_qa', Addr='10.114.84.68', Client='', TrafficEnv=None, Extra={'cluster': 'default', 'env': 'prod'}))
2024-10-01 03:11:26.213 2024-10-01 03:10:17 INFO egress: videoarch.livenet.qa_live_faas-asgard_invoke, resp: FuncResponse(Trace=Trace(OK=False, Err='assert failed', Extra=''), Data='{"result": false, "logs": ["[assert] false: <404> should be = <0>"]}', BaseResp=BaseResp(StatusMessage='', StatusCode=0, Extra={'LogID': '2024100103100601011408406865995'}))
2024-10-01 03:11:26.213 2024-10-01 03:10:17 ERROR [runtime_err] curr_step: f10_live-assert, err: assert failed, detail: Traceback (most recent call last):
2024-10-01 03:11:26.213   File "/usr/local/lib/python3.7/site-packages/asgard/light_house/magic_pipeline.py", line 163, in runtime
2024-10-01 03:11:26.213     _resp = biforst(func, req)
2024-10-01 03:11:26.213   File "/usr/local/lib/python3.7/site-packages/asgard/light_house/magic_rpc.py", line 42, in biforst
2024-10-01 03:11:26.213     raise RuntimeError(resp.Trace.Err)
2024-10-01 03:11:26.213 RuntimeError: assert failed
2024-10-01 03:11:26.213
2024-10-01 03:11:26.213 2024-10-01 03:10:17 INFO [runtime err] [[runtime_err] curr_step: f10_live-assert, err: assert failed]
2024-10-01 03:11:26.213 2024-10-01 03:10:17 INFO [中间态 req] {'f1': FuncRequest(FuncID='f1', Func='live-context', Description='VAS', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"context": {"vhost": "push-test-tt01.videoarchserverqa.xyz", "app": "live-trans"}, "ctx_cfg": {}}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), Before=None, After=None, Base=None), 'f2': FuncRequest(FuncID='f2', Func='live-context', Description='pod ip', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"context": {"ips": ["10.113.249.85", "10.113.249.57", "10.113.249.55", "10.113.109.247", "10.118.175.128"], "source_third": "source-fcdn-sg.s.worldfcdn.com"}, "ctx_cfg": {}}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), Before=None, After=None, Base=None), 'f3': FuncRequest(FuncID='f3', Func='live-get_random', Description='', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"random_schema": "stream-test-${r}", "ctx_cfg": {}}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), Before=None, After=None, Base=None), 'f4': FuncRequest(FuncID='f4', Func='live-context', Description='get stream_md', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"context": "${stream}_md", "ctx_cfg": {}, "stream": "stream-test-tm3ldcwoi8cdy1lp"}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), Before=None, After=None, Base=None), 'f5': FuncRequest(FuncID='f5', Func='live-stream_interaction', Description='push stream', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"ctx_cfg": {}, "cmd_parallel": false, "cmd_async": true, "cmd_client": "nss_bench", "cmd": " --vvv push --flv /opt/tiger/ftest_lowcode_core/media_cache/mot_h264.flv --url \'rtmp://${ip}:1935/${app}/${stream}?vhost=${vhost}&internal=true\' --type rtmp --duration 60", "cmd_timeout": "", "mode": "local", "cmd_list": [], "stream": "stream-test-tm3ldcwoi8cdy1lp", "app": "live-trans", "vhost": "push-test-tt01.videoarchserverqa.xyz", "ip": "10.113.249.85"}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), Before=None, After=None, Base=None), 'f6': FuncRequest(FuncID='f6', Func='live-assert', Description='', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"assert_schemas": {"${code}": ["=", 0]}, "ctx_cfg": {}, "code": 0}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), Before=None, After=None, Base=None), 'f7': FuncRequest(FuncID='f7', Func='live-get_time', Description='', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"time_schema": "timestamp_ms", "ctx_cfg": {}, "shift": ""}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), Before=None, After=None, Base=None), 'f8': FuncRequest(FuncID='f8', Func='live-http', Description='first hook on play start trigger transcoding task', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"http_retry_times": 0, "http_retry_interval_seconds": 0, "ctx_cfg": {}, "http_schema": "http", "http_method": "POST", "http_host": "nss-dispatch-tt01.tiktokd.org", "http_port": null, "http_path": "/api/v4/on_play_start", "http_url": "", "http_params": {}, "http_body": {"timestamp_ms": "${timestamp_ms}", "client_id": "1731592288", "server_ip": "${ip}", "server_port": 1935, "host_ip": "${ip}", "host_ipv6": "", "host_pod": "${pod}", "client_ip": "${ip}", "vhost": "${vhost}", "domain": "${vhost}", "app": "${app}", "stream": "${stream_name}", "params": "", "url_type": "", "stream_group": null, "metadata": {"script_info": "{}"}, "is_norm_source": false, "norm_sink_sess_count": 0, "trans_info": null, "media_type": "", "re_hook_params": "", "force_sync": false, "stream_key": "${vhost}:${app}:${stream_name}"}, "http_headers": {"x-tt-env": "canary"}, "json_resp": true, "expect_status": null, "consul_cfg": {}, "stream_name": "stream-test-tm3ldcwoi8cdy1lp_md", "timestamp_ms": 1727752207103, "app": "live-trans", "ip": "10.113.249.85", "vhost": "push-test-tt01.videoarchserverqa.xyz"}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), Before=None, After=None, Base=None), 'f9': FuncRequest(FuncID='f9', Func='live-http', Description='hook on play start with transcode stream', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"http_retry_times": 0, "http_retry_interval_seconds": 0, "ctx_cfg": {"delay": 10}, "http_schema": "http", "http_method": "POST", "http_host": "nss-dispatch-tt01.tiktokd.org", "http_port": null, "http_path": "/api/v4/on_play_start", "http_url": "", "http_params": {}, "http_body": {"timestamp_ms": "${timestamp_ms}", "client_id": "1731592288", "server_ip": "${ip}", "server_port": 1935, "host_ip": "${ip}", "host_ipv6": "", "host_pod": "${pod}", "client_ip": "${ip}", "vhost": "${vhost}", "domain": "${vhost}", "app": "${app}", "stream": "${stream_name}", "params": "", "url_type": "", "stream_group": null, "metadata": {"script_info": "{}"}, "is_norm_source": false, "norm_sink_sess_count": 0, "trans_info": null, "media_type": "", "re_hook_params": "", "force_sync": false, "stream_key": "${vhost}:${app}:${stream_name}"}, "http_headers": {"x-tt-env": "canary"}, "json_resp": true, "expect_status": null, "consul_cfg": {}, "stream_name": "stream-test-tm3ldcwoi8cdy1lp_md", "timestamp_ms": 1727752207103, "app": "live-trans", "ip": "10.113.249.57", "vhost": "push-test-tt01.videoarchserverqa.xyz"}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), Before=None, After=None, Base=None), 'f10': FuncRequest(FuncID='f10', Func='live-assert', Description='', Params=JsonReqData(IsJsonData=True, ReqData={'req_obj': 'FuncRequest'}, ReqDataJson='{"assert_schemas": {"${code}": ["=", 0]}, "ctx_cfg": {}, "code": 404}'), Extra=JsonReqData(IsJsonData=False, ReqData={}, ReqDataJson=''), Before=None, After=None, Base=None)}
2024-10-01 03:11:26.213 2024-10-01 03:10:17 INFO [中间态 resp] {'f1': {'context': {'vhost': 'push-test-tt01.videoarchserverqa.xyz', 'app': 'live-trans'}}, 'f2': {'context': {'ips': ['10.113.249.85', '10.113.249.57', '10.113.249.55', '10.113.109.247', '10.118.175.128'], 'source_third': 'source-fcdn-sg.s.worldfcdn.com'}}, 'f3': {'data': 'stream-test-tm3ldcwoi8cdy1lp'}, 'f4': {'context': 'stream-test-tm3ldcwoi8cdy1lp_md'}, 'f5': {'code': 0, 'msg': 'nil return for async call', 'outputs': [], 'extra': {'log_id': '20241001031005D76BDEE61A2B83B00889', 'idc': 'useast5', 'host': '10.114.86.216'}, 'cmd': " --vvv push --flv /opt/tiger/ftest_lowcode_core/media_cache/mot_h264.flv --url 'rtmp://10.113.249.85:1935/live-trans/stream-test-tm3ldcwoi8cdy1lp?vhost=push-test-tt01.videoarchserverqa.xyz&internal=true' --type rtmp --duration 60"}, 'f6': {'result': True, 'logs': ['[assert] true: <0> should be = <0>']}, 'f7': {'data': 1727752207103}, 'f8': {'status_code': 200, 'headers': {'Date': 'Tue, 01 Oct 2024 03:10:07 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '99', 'Connection': 'keep-alive', 'X-Tt-Logid': '2024100103100603019883C8E351867601', 'server-timing': 'inner; dur=13', 'x-tt-trace-host': '017d533c2559d9b663bdb998e00c2e1409e3acbdb9c67678be68379a5e8aafe398d1c02f798f9ed54dfb254a37d000890301493c659e6d5b655af6698dc0a976f8', 'x-tt-trace-tag': 'id=00;cdn-cache=miss', 'x-tt-trace-id': '00-24100103100603019883C8E351867601-4A36EE4F675C65DB-00', 'Server': 'TLB'}, 'content': {'version': '1.0.1', 'code': 404, 'msg': 'StatusNotFound', 'log_id': '2024100103100603019883C8E351867601'}, 'curl': 'curl -X POST -H \'Accept: */*\' -H \'Accept-Encoding: gzip, deflate\' -H \'Connection: keep-alive\' -H \'Content-Length: 688\' -H \'Content-Type: application/json\' -H \'User-Agent: python-requests/2.32.3\' -H \'x-tt-env: canary\' -d \'{"timestamp_ms": 1727752207103, "client_id": "1731592288", "server_ip": "10.113.249.85", "server_port": 1935, "host_ip": "10.113.249.85", "host_ipv6": "", "host_pod": "${pod}", "client_ip": "10.113.249.85", "vhost": "push-test-tt01.videoarchserverqa.xyz", "domain": "push-test-tt01.videoarchserverqa.xyz", "app": "live-trans", "stream": "stream-test-tm3ldcwoi8cdy1lp_md", "params": "", "url_type": "", "stream_group": null, "metadata": {"script_info": "{}"}, "is_norm_source": false, "norm_sink_sess_count": 0, "trans_info": null, "media_type": "", "re_hook_params": "", "force_sync": false, "stream_key": "push-test-tt01.videoarchserverqa.xyz:live-trans:stream-test-tm3ldcwoi8cdy1lp_md"}\' http://nss-dispatch-tt01.tiktokd.org/api/v4/on_play_start'}, 'f9': {'status_code': 200, 'headers': {'Date': 'Tue, 01 Oct 2024 03:10:17 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '99', 'Connection': 'keep-alive', 'X-Tt-Logid': '20241001031016BADBD7FF6CA7B1805F30', 'server-timing': 'inner; dur=21', 'x-tt-trace-host': '017d533c2559d9b663bdb998e00c2e1409e1f9fc5e9bee731242067e030c7b3fe0479ef63b397dc8aa9cd361c72e04c7d02b71c65311974ee29ee83d90478ddf80', 'x-tt-trace-tag': 'id=00;cdn-cache=miss', 'x-tt-trace-id': '00-241001031016BADBD7FF6CA7B1805F30-18C78B7680E955B9-00', 'Server': 'TLB'}, 'content': {'version': '1.0.1', 'code': 404, 'msg': 'StatusNotFound', 'log_id': '20241001031016BADBD7FF6CA7B1805F30'}, 'curl': 'curl -X POST -H \'Accept: */*\' -H \'Accept-Encoding: gzip, deflate\' -H \'Connection: keep-alive\' -H \'Content-Length: 688\' -H \'Content-Type: application/json\' -H \'User-Agent: python-requests/2.32.3\' -H \'x-tt-env: canary\' -d \'{"timestamp_ms": 1727752207103, "client_id": "1731592288", "server_ip": "10.113.249.57", "server_port": 1935, "host_ip": "10.113.249.57", "host_ipv6": "", "host_pod": "${pod}", "client_ip": "10.113.249.57", "vhost": "push-test-tt01.videoarchserverqa.xyz", "domain": "push-test-tt01.videoarchserverqa.xyz", "app": "live-trans", "stream": "stream-test-tm3ldcwoi8cdy1lp_md", "params": "", "url_type": "", "stream_group": null, "metadata": {"script_info": "{}"}, "is_norm_source": false, "norm_sink_sess_count": 0, "trans_info": null, "media_type": "", "re_hook_params": "", "force_sync": false, "stream_key": "push-test-tt01.videoarchserverqa.xyz:live-trans:stream-test-tm3ldcwoi8cdy1lp_md"}\' http://nss-dispatch-tt01.tiktokd.org/api/v4/on_play_start'}, 'f10': None}
2024-10-01 03:11:26.213 2024-10-01 03:10:17 ERROR [[runtime_err] curr_step: f10_live-assert, err: assert failed]
2024-10-01 03:11:26.218 =============================== warnings summary ===============================
2024-10-01 03:11:26.218 ../usr/local/lib/python3.7/site-packages/euler/client.py:143: 11 warnings
2024-10-01 03:11:26.218   /usr/local/lib/python3.7/site-packages/euler/client.py:143: EulerDeprecatedWarning: cluster not specified, by some history reasons, all clusters will be used without mesh mode, but only default cluster will be used in mesh mode. So we highly recommend to specify a cluster (e.g. default), like: `sd://product.service.module?cluster=default` to avoid confuse.
2024-10-01 03:11:26.218     warnings.warn(msg, errors.EulerDeprecatedWarning)
2024-10-01 03:11:26.218
2024-10-01 03:11:26.218 -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
2024-10-01 03:11:26.218 -------------- generated xml file: /atlas-code/output/result.xml ---------------
2024-10-01 03:11:26.218 =========================== short test summary info ============================
2024-10-01 03:11:26.218 FAILED asgard_gen/test_229.py::TestPlanEnv_229::test_US_TTP[206451_OnPublishStart - Stream online - No priority parameter 2<3, 2=2 - Overwrite failed - Verify GetRelaySource successful.-req_data36]
2024-10-01 03:11:26.218 FAILED asgard_gen/test_229.py::TestPlanEnv_229::test_US_TTP[206451_OnPublishStart - Stream online - No priority parameter 2<3, 2=2 - Overwrite failed - Verify GetRelaySource successful.-req_data37]
2024-10-01 03:11:26.218 FAILED asgard_gen/test_229.py::TestPlanEnv_229::test_US_TTP[206114_OnPlayStart - Transcoded stream - First pull triggers transcoding - Subsequent pull - Returns success with correct address.-req_data18]
2024-10-01 03:11:26.218 ============= 3 failed, 38 passed, 11 warnings in 88.57s (0:01:28) =============
2024-10-01 03:11:26.218 Report successfully generated to ./reports/html
2024-10-01 03:12:32.130